#####################################################################

# Use the Nginx image to build the module
ARG VERSION=1.27.5-alpine3.21
FROM nginx:${VERSION} as builder

# Set the Nginx version
ARG NGINX_VERSION=1.27.5
ENV NGINX_VERSION=${NGINX_VERSION}

# Set the headers-more module version
ENV MORE_HEADERS_VERSION=0.39
ENV MORE_HEADERS_GITREPO=openresty/headers-more-nginx-module

# Download sources
RUN wget -q "http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz" -O nginx.tar.gz && \
    wget -q "https://github.com/${MORE_HEADERS_GITREPO}/archive/v${MORE_HEADERS_VERSION}.tar.gz" -O extra_module.tar.gz

# For latest build deps, see https://github.com/nginxinc/docker-nginx/blob/master/mainline/alpine/Dockerfile
RUN apk add --no-cache --virtual .build-deps \
    gcc=14.2.0-r4\
    musl-dev=1.2.5-r9 \
    make=4.4.1-r2 \
    openssl-dev=3.3.4-r0 \
    pcre-dev=8.45-r3 \
    zlib-dev=1.3.1-r2 \
    linux-headers=6.6-r1 \
    libxslt-dev=1.1.42-r2 \
    gd-dev=2.3.3-r9 \
    geoip-dev=1.6.12-r5 \
    perl-dev=5.40.1-r1 \
    libedit-dev=20240808.3.1-r0 \
    mercurial=6.9.5-r0 \
    bash=5.2.37-r0 \
    alpine-sdk=1.1-r0 \
    findutils=4.10.0-r0

SHELL ["/bin/ash", "-eo", "pipefail", "-c"]

RUN rm -rf /usr/src/nginx /usr/src/extra_module && mkdir -p /usr/src/nginx /usr/src/extra_module && \
    tar -zxC /usr/src/nginx -f nginx.tar.gz && \
    tar -xzC /usr/src/extra_module -f extra_module.tar.gz

WORKDIR /usr/src/nginx/nginx-${NGINX_VERSION}

# Reuse same cli arguments as the nginx:alpine image used to build
RUN CONFARGS=$(nginx -V 2>&1 | sed -n -e 's/^.*arguments: //p') && \
    sh -c "./configure --with-compat $CONFARGS --add-dynamic-module=/usr/src/extra_module/*" && make modules

# Use the Hugo image to build the site
FROM hugomods/hugo:exts as hugo

# Base URL
ARG HUGO_BASEURL=
ENV HUGO_BASEURL=${HUGO_BASEURL}

# Build site
COPY ./hugo /src/
RUN hugo --minify --enableGitInfo

# Use the Nginx image
ARG VERSION=1.27.5-alpine3.21
FROM nginx:${VERSION}

# Set the Nginx version
ARG NGINX_VERSION=1.27.5
ENV NGINX_VERSION=${NGINX_VERSION}

LABEL maintainer="Piotr K."
LABEL version="1.0"
LABEL description=""
LABEL vendor=""

# Copy the generated files to keep the image as small as possible.
COPY --from=builder /usr/src/nginx/nginx-${NGINX_VERSION}/objs/*_module.so /etc/nginx/modules/
COPY --from=builder /usr/sbin/nginx /usr/sbin/nginx
COPY --from=hugo /src/public /site

# Remove default configuration and add our custom configurations
RUN rm /etc/nginx/conf.d/default.conf
COPY ./conf/nginx.conf /etc/nginx/nginx.conf
COPY ./conf/hugo.conf /etc/nginx/conf.d/

# Ensure necessary directories and permissions
RUN mkdir -p /var/cache/nginx /var/run/nginx /var/log/nginx && \
    chown -R nginx:nginx /var/cache/nginx /var/run/nginx /var/log/nginx && \
    chmod -R 775 /var/run/nginx

# Expose the directory to link with the Unix socket
VOLUME /run/app/

# Run as non-root user
USER nginx

# Set the entrypoint
CMD ["nginx", "-g", "daemon off;"]
