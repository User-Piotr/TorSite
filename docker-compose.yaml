---

x-restart: &restart
  restart: unless-stopped

services:
  init-permissions:
    image: alpine:latest
    container_name: init-permissions
    profiles:
      - tor
    volumes:
      - ./domain:/var/lib/tor/hidden_service
      - ./shared:/run/app
    command: |
      sh -c "
      chown -R 100:101 /var/lib/tor/hidden_service && \
      chmod 700 /var/lib/tor/hidden_service && \
      chown -R 100:101 /run/app && \
      chmod 775 /run/app
      "
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          cpus: '0.25'
          memory: 64M

  tor:
    image: tor:${TAG:-dev}
    container_name: tor
    profiles:
      - tor
    build:
      context: .
      dockerfile: Dockerfile.tor-${DISTRIBUTION:-alpine}
    environment:
      - VANGUARDS_CONFIG=/etc/tor/vanguards.conf
    volumes:
      - ./domain:/var/lib/tor/hidden_service
      - ./shared:/run/app/
    configs:
      - source: torrc
        target: /etc/tor/torrc
      - source: vanguards
        target: /etc/tor/vanguards.conf
    networks:
      - internal
      - external
    depends_on:
      - init-permissions
    <<: *restart
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 256M
        reservations:
          cpus: '0.5'
          memory: 128M
    healthcheck:
      test: ["CMD", "python", "/etc/tor/scripts/get_tor_connection_status.py"]
      interval: 10s
      timeout: 10s
      start_period: 60s
      start_interval: 5s
      retries: 3
    labels:
      - "com.octo.service=tor"
      - "com.octo.version=${VERSION:-dev}"

  nginx:
    image: nginx:${TAG:-dev}
    container_name: nginx
    profiles:
      - tor
    build:
      context: .
      dockerfile: Dockerfile.nginx
      args:
        - HUGO_BASEURL=http://localhost:80
        - NGINX_VERSION=1.25.3
    volumes:
      - ./shared:/run/app/
    depends_on:
      tor:
        condition: service_healthy
    <<: *restart
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          cpus: '0.25'
          memory: 64M
    healthcheck:
      test: ["CMD-SHELL", "curl -I --fail --unix-socket /run/app/sock http://localhost || exit 1"]
      interval: 30s

      timeout: 10s
      retries: 3
    labels:
      - "com.octo.service=nginx"
      - "com.octo.version=${VERSION:-dev}"

  wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard
    profiles:
      - vpn
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./conf/wireguard.conf:/config/wg_confs/wireguard.conf
    ports:
      - 51820:51820/udp
    networks:
      - internal
      - external
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    <<: *restart
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          cpus: '0.25'
          memory: 64M

networks:
  internal:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/24
    internal: true

  external:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.10.0/24
    internal: false

configs:
  torrc:
    file: ./conf/torrc
  vanguards:
    file: ./conf/vanguards.conf
  wireguard:
    file: ./conf/wireguard.conf
