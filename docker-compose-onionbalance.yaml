---

x-restart: &restart
  restart: unless-stopped

services:
  init-permissions:
    image: alpine:latest
    container_name: init-permissions
    profiles:
      - backend
    volumes:
      - ./domain:/var/lib/tor/hidden_service
      - ./shared:/run/app
    network_mode: "none"
    command: |
      sh -c "
      chown -R 100:101 /var/lib/tor/hidden_service && \
      chmod 700 /var/lib/tor/hidden_service && \
      chown -R 100:101 /run/app && \
      chmod 775 /run/app
      "
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          cpus: '0.25'
          memory: 64M

  onionbalance:
    image: tor:frontend-${TAG:-dev}
    container_name: tor-frontend
    profiles:
      - frontend
    build:
      context: .
      dockerfile: Dockerfile.tor-frontend-${DISTRIBUTION:-alpine}
    environment:
      - VANGUARDS_CONFIG=/etc/tor/vanguards.conf
    volumes:
      - ./domain:/hs_keys
    configs:
      - source: torrc-frontend
        target: /etc/tor/torrc
      - source: vanguards
        target: /etc/tor/vanguards.conf
    networks:
      - external
    <<: *restart
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 256M
        reservations:
          cpus: '0.5'
          memory: 128M
    healthcheck:
      test: ["CMD", "python", "/etc/tor/scripts/get_tor_connection_status.py"]
      interval: 10s
      timeout: 10s
      start_period: 60s
      start_interval: 5s
      retries: 3
    labels:
      - "com.octo.service=onionbalance"
      - "com.octo.version=${VERSION:-dev}"

  tor-backend:
    image: tor:backend-${TAG:-dev}
    profiles:
      - backend
    build:
      context: .
      dockerfile: Dockerfile.tor-backend-${DISTRIBUTION:-alpine}
    environment:
      - VANGUARDS_CONFIG=/etc/tor/vanguards.conf
    volumes:
      - ./shared:/run/app/
    configs:
      - source: torrc-backend
        target: /etc/tor/torrc
      - source: vanguards
        target: /etc/tor/vanguards.conf
    networks:
      - external
    depends_on:
      - init-permissions
    <<: *restart
    deploy:
      mode: replicated
      replicas: ${REPLICAS:-3}
      endpoint_mode: vip
      resources:
        limits:
          cpus: '1.0'
          memory: 256M
        reservations:
          cpus: '0.5'
          memory: 128M
    healthcheck:
      test: ["CMD", "python", "/etc/tor/scripts/get_tor_connection_status.py"]
      interval: 30s
      timeout: 20s
      start_period: 180s
      retries: 5
    labels:
      - "com.octo.service=tor"
      - "com.octo.version=${VERSION:-dev}"

  nginx:
    image: nginx:${TAG:-dev}
    container_name: nginx
    profiles:
      - backend
    build:
      context: .
      dockerfile: Dockerfile.nginx
      args:
        - HUGO_BASEURL=http://localhost:80
        - NGINX_VERSION=1.27.5
    volumes:
      - ./shared:/run/app/
    network_mode: "none"
    depends_on:
      tor-backend:
        condition: service_healthy
    <<: *restart
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          cpus: '0.25'
          memory: 64M
    healthcheck:
      test: ["CMD-SHELL", "curl -I --fail --unix-socket /run/app/sock http://localhost || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "com.octo.service=nginx"
      - "com.octo.version=${VERSION:-dev}"

  kuma:
    image: kuma:${TAG:-dev}
    container_name: kuma
    profiles:
      - monitoring
    build:
      context: .
      dockerfile: Dockerfile.kuma
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - external
    ports:
      - "8080:3001"
    depends_on:
      tor-proxy:
        condition: service_healthy
    <<: *restart
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M

  tor-proxy:
    image: tor:proxy-${TAG:-dev}
    container_name: tor-proxy
    profiles:
      - monitoring
    build:
      context: .
      dockerfile: Dockerfile.tor-proxy-${DISTRIBUTION:-alpine}
    configs:
      - source: torrc-proxy
        target: /etc/tor/torrc
    networks:
      - external
    ports:
      - "9050:9050"
    <<: *restart
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M
    healthcheck:
      test: ["CMD", "python", "/etc/tor/scripts/get_tor_connection_status.py"]
      interval: 30s
      timeout: 20s
      start_period: 180s
      retries: 5
    labels:
      - "com.octo.service=proxy"
      - "com.octo.version=${VERSION:-dev}"

networks:
  internal:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/24
    internal: true

  external:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.10.0/24
    internal: false

configs:
  torrc-frontend:
    file: ./conf/torrc-frontend
  torrc-backend:
    file: ./conf/torrc-backend
  torrc-proxy:
    file: ./conf/torrc-proxy
  vanguards:
    file: ./conf/vanguards.conf
